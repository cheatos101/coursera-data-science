print("Hello World, Hello Evaluator")
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x,mean)
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 2, mean)
apply(x, 1, mean)
apply
x
x <- matrix(rnorm(5), 20, 10)
x
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
apply(a, c(1, 2), mean)
a
rowMeans(a, dims = 2)
rowMeans
rep
rep(1, 4)
rep(2,3)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector
makeVector(5)
c<-makeVector(5)
print(c){}
print(c)
ee<-makeVector(5)
ee
rm(dir)
rm(dir())
c
rm(list=ls())
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
x= makeVector(5)
x.get
x['get']
x$set(5)
x$get()
x$getmean()
x$setmean()
x$setmean(5)
x$getmean()
x$setmean([1,2,3,4]
x$setmean([1,2,3,4])
x$setmean(c=(1,2,3,4))
c(1,2,3,45)
numeric(1,2,3)
a=numeric(lenght=5)
a=numeric(length=5)
a=1:5
x$set(a)
x
x$get()
x$getmean()
x$setmean()
x$setmean(mean())
x$setmean(mean
)
x$getmean()
x$setmean(a)
x$getmean()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(a)
a
a <-makeVector(1:5)
cachemean(a)
m
x <<- y
x <<- y
list(set = set, get = get,
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
e
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(1:5)
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(1:5)
a<-makeCacheMatrix(1:5)
a
cacheSolve(a)
a<-makeCacheMatrix(1:6)
cacheSolve(a)
a<-makeCacheMatrix(1:9)
cacheSolve(a)
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
a=matrix
a=matrix(1,2;3,4)
a=matrix((1,2),(3,4))
a=c(1,2,3, 11,12,13)
a
a=matrix(c(1,2,3, 11,12,13))
a
a<-matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3,
)
a
a<-matrix(c(1,2,3, 11,12,13, 19,20,21), nrow = 3, ncol = 3,
)
a<-matrix(c(1,2,3, 11,12,13, 19,20,21), nrow = 3, ncol = 3)
a
makeCacheMatrix(a)
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(a)
a<-makeCacheMatrix(a)
a
cacheSolve(a)
a
a$set_inverse()
a$set_inverse(a)
a
a
a$get_inverse()
a$get_inverse(3)
a$get_inverse(a)
print(a$get_inverse())
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
x
cacheSolve(x)
rm(list=ls)
rm(list=ls())
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x
x<-1:5
x<-makeVector(1:5)
cachemean(x)
cachemean(x)
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
a=makeCacheMatrix(matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3))
a
cacheSolve(a)
a=makeCacheMatrix(matrix(c(1,2,3,2,2,4,3,4,2),nrow=3,ncol=3))
a
a$get()
cacheSolve(a)
mat=makeCacheMatrix(matrix(c(1,2,3,2,2,4,3,4,2),nrow=3,ncol=3))
cacheSolve(mat)
mat=makeCacheMatrix(matrix(c(1,8,3,8,2,4,3,4,2),nrow=3,ncol=3))
cacheSolve(mat)
mat=makeCacheMatrix(matrix(c(1,2,3,2,2,4,3,4,2),nrow=3,ncol=3))
cacheSolve(mat)
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
mat=makeCacheMatrix(matrix(c(1,2,3,2,2,4,3,4,2),nrow=3,ncol=3))
cacheSolve(mat)
mat$set(matrix(c(1,2,3,2,2,4,3,4,4),nrow=3,ncol=3))
cacheSolve(mat)
cacheSolve(mat)
mat=makeCacheMatrix(matrix(c(1,2,3,2,2,4,3,4,2),nrow=3,ncol=3))
cacheSolve(mat)
mat$set(matrix(c(1,2,3,2,2,4,3,4,2),nrow=3,ncol=3))
cacheSolve(mat)
mat$set(matrix(c(9,2,3,2,9,4,3,4,9),nrow=3,ncol=3))
cacheSolve(mat)
mat$set(matrix(c(1,2,3,2,1,4,3,4,1),nrow=3,ncol=3))
cacheSolve(mat)
source('~/Dropbox/Courses/Stats/ProgrammingAssignment2/cachematrix.R')
library(datasets)
data(iris)
?iris
iris
iris$Petal.Length
mean(iris$Petal.Length)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429-82.63636
debug(ls)
ls
ls()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern, sorted = TRUE)
{
if (!missing(name)) {
pos <- tryCatch(name, error = function(e) e)
name <- substitute(name)
if (inherits(pos, "error")) {
if (!is.character(name))
name <- deparse(name)
rm(list=ls())
set.seed(1)
rpois(5, 2)
qpois
str(qpois)
summary(qpois)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
system.time()
fileURL<-'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv '
fileURL<-'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(fileURL,destfile = 'data.csv')
read.csv('data.csv')
data <-read.csv('data.csv')
data$val
data$VAL
data[data$VAL==24]
data$VAL==24
data[data$VAL==24]
data$VAL==24
a<-data$VAL==24
a==TRUE
sum(a)
sum(a,na.rm = TRUE)
data$FES
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx',destfile = 'data2.csv')
read.csv('data2.xlsx')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx',destfile = 'data2.xlsx')
read.csv('data2.xlsx')
read.xlsx('data2.xlsx')
read.xlsx
library(xlsx)
cran
install.packages("xlsx")
library(xlsx)
read.xlsx('data2.xlsx')
read.xlsx('data2.xlsx',1)
data_sub <- read.xslx
data_sub <- read.xlsx('data2.xlsx',sheetIndex = 1,colIndex = 7:15,rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- read.xlsx('data2.xlsx',sheetIndex = 1,colIndex = 7:15,rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml',destfile = 'data3.xml')
library(xml)
install.packages("XML")
library(msl)
library(XML)
xmlTreeParse
doc<-xmlTreeParse('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml',useInternal= TRUE )
doc<-xmlTreeParse('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml')
doc<-xmlTreeParse('data3.xml')
doc
doc['zipcode']
rootNode<-xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode")
xpathSApply(rootNode,xmlValue)
xpathSApply(rootNode,'//name')
cleart
clear
xpathSApply(rootNode,'//name')
rootNode[[1]][[1]]
xpathSApply(rootNode[[1]],'//name')
names(rootNode)
names(rootNode[[1]])
xmlSApply(rootNode)
xmlSApply(rootNode,xmlValue)
xmlSApply(rootNode,"zipcode",xmlValue)
xmlSApply(rootNode,"//zipcode",xmlValue)
xmlSApply(rootNode,xmlValue)
zipcode
xmlSApply(rootNode,"//zipcode",xmlValue)
xmlSApply(rootNode[[1]],"//zipcode",xmlValue)
xmlSApply(rootNode,"//zipcode",xmlValue)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv',destfile = 'data4.csv')
DT <- fread('data4.csv')
library(data.table)
install.packages("data.table")
library(data.table)
fread
fread('data4.csv')
DT<-fread('data4.csv')
proc
library(proc)
install.packages("proc.time")
Sys.time()
start=Sys.time();end=Sys.time();end-start
start=Sys.time();mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15);end=Sys.time();end-start
start=Sys.time();mean(DT$pwgtp15,by=DT$SEX);end=Sys.time();end-start
start=Sys.time();DT[,mean(pwgtp15),by=SEX];end=Sys.time();end-start
start=Sys.time();tapply(DT$pwgtp15,DT$SEX,mean);end=Sys.time();end-start
start=Sys.time();sapply(split(DT$pwgtp15,DT$SEX),mean);end=Sys.time();end-start
start=Sys.time();rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2];end=Sys.time();end-start
install.packages("RMySQL")
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL())
library(RMySQL)
ucscDb <- dbConnect(MySQL())
ucscDb <- dbConnect(MySQL(),user='genome',host="genome-mysql.cse.ucsc.udu")
ucscDb <- dbConnect(MySQL(),user='genome',host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucsc)
result <- dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb)
result
dbListTables(ucscDb)
ucscDb <- dbConnect(MySQL(),user='genome',host="genome-mysql.cse.ucsc.edu")
dbListTables(ucscDb)
dbListFields(ucscDb)
result <- dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb)
result
source("http://bioconductor.org/biclite.R")
source("http://bioconductor.org/bicLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(httr)
install.packages(httr)
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "daf6111b4df8f75500d4",
secret = "6a7ce967a030cabcdd70082e8687a9630aafdd1a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
q
q
q
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "daf6111b4df8f75500d4",
secret = "6a7ce967a030cabcdd70082e8687a9630aafdd1a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
github_token
myapp <- oauth_app("github",
key = "daf6111b4df8f75500d4",
secret = "6a7ce967a030cabcdd70082e8687a9630aafdd1a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
package
install.packages(httpuv)
install.packages('httpuv')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
remove.packages('httpuv')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
conn<-url('http://biostat.jhsph.edu/~jleek/contact.html ')
conn<-url('http://biostat.jhsph.edu/~jleek/contact.html')
htmlCode<-readLines(url())
htmlCode<-readLines(conn
)
close(conn)
htmlCode
nchar(htmlCode)
nchar(htmlCode)[10]
nchar(htmlCode)[20]
nchar(htmlCode)[30]
nchar(htmlCode)[100]
read.fwf
data<-read.fwf("~/Downloads/getdata-wksst8110.for")
03JAN1990     23.4-0.4     25.1-0.3     26.6 0.0     28.6 0.3
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 57)
data
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 58)
data
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 622)
data
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 62)
data
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 63)
data
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 61)
data
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 62)
data
data[1]
data[2]
data[1]
data[`]
data[1]
data[1]
data[1][1]
data[1][1][1]
View(data)
View(data)
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 62, sep=' -')
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths = 62, sep='\ -')
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths=c(12, 7,4, 9,4, 9,4, 9,4))
data
View(data)
data<-read.fwf("~/Downloads/getdata-wksst8110.for",widths=c(12, 7,4, 9,4, 9,4, 9,4), skip=4)
data
data[1]
data[2]
data[4]
sum(data[4])
setwd('carre/coursera-data-science/get_clean_data_project/submission/')
open()
